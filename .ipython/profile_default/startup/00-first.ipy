#!/usr/bin/env ipython

from __future__ import print_function
from sys import stdout, stderr, exit
import __main__ as main

def notebookType() :
	try :
		from IPython import get_ipython
		shell = get_ipython().__class__.__name__
		if shell == 'ZMQInteractiveShell':
			isNB = True   # Jupyter notebook or qtconsole
			interpreter = "Jupyter"
		elif shell == 'TerminalInteractiveShell':
			isNB = False  # Terminal running IPython
			interpreter = "IPython"
		else :
			isNB = False  # Terminal running Python
			interpreter = "Python"
	except NameError as why :
		print( "=> ERROR: %s" % why, file = stderr )
		isNB = False      # Probably standard Python interpreter
		interpreter = "UNKNOWN"

#	print( "=> interpreter = <%s>" % interpreter )
	return interpreter

try :
	print( "\n=> Starting the init script <%s> ..." % main.__file__ , file = stderr )

	if notebookType() == "Jupyter" :
		print( "=> This is a Jupyter notebook, switching to <notebook> backend.", file=stderr )
#		%matplotlib inline
		%matplotlib notebook
	elif notebookType() == "IPython" :
		%matplotlib auto

	import matplotlib as mpl
	print( "=> The current backend is: <%s>" % mpl.get_backend(), file=stderr )
	import matplotlib.pyplot as plt
	import numpy as np
	import pandas as pd, pandas as pda
	# reload external modules when they change.
	%reload_ext autoreload
	%autoreload 2
	%reload_ext tikzmagic

	print( "=> DONE.\n" )
except Exception as why :
	print("\n%s" % why)
